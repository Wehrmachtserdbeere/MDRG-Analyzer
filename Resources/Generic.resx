<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="invalidkey" xml:space="preserve">
    <value>Invalid key, please choose one of the existing options.</value>
  </data>
  <data name="loadfile" xml:space="preserve">
    <value>Load file</value>
  </data>
  <data name="loadfile_instructions" xml:space="preserve">
    <value>Please input the directory in which the file you want to load is located. Alternatively, you can directly input a file.</value>
  </data>
  <data name="loadfile_invalid" xml:space="preserve">
    <value>The file or directory was not found. Ensure any input file ends with ".mdrg". Please try again.</value>
  </data>
  <data name="loadfile_selectoneofthesefiles" xml:space="preserve">
    <value>Please select one of these files</value>
  </data>
  <data name="mainmenu" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="nosavedata" xml:space="preserve">
    <value>It looks like you\'re experiencing an issue where the \"savedata\" section of your savefile JSON appears to be empty. This might seem like a bug at first glance, but I want to reassure you that the program is working exactly as intended. The issue is not caused by a malfunction in the software but rather by a misunderstanding of how the save and load process is supposed to work.

Let\'s walk through this carefully and make sure everything is clear.

When you open the savefile and notice that \"savedata\" is empty, it\'s important to understand what that means. The program is looking for actual saved game content that you have previously exported. If the \"savedata\" field is blank, it means that no save data was ever stored there in the first place. This does not indicate an error in the application — it simply means that no save has been recorded yet.

This is a common situation that typically happens when users try to load a savefile before ever having exported any data into it. Think of it like trying to load a game before you\'ve saved anything — there\'s nothing to load because nothing has been saved.

Here\'s the crucial point: You need to export your save before you can load it.

This step is explained in the README file included with the project, and I strongly encourage you to read it fully. The README contains detailed instructions on how to use the save and load functionality, and following those steps will ensure that your experience with the program is smooth and frustration-free.

I know that reading documentation can sometimes feel tedious or unnecessary, especially when you\'re eager to dive into the project or tool. Howver, in this case, skipping the instructions leads directly to the problem you\'re facing now.

In short, export your save before you try to load it.

If you are certain that you have exported your save file and are still seeing this error, please contact Strawberry Software on the official GitHub Repository by opening an Issue, by going on the official Strawberry Software Discord Server and pinging Strawberry, or by going to the MDRG Analyzer thread on the Incontinent Cell Discord Server and pinging Strawberry there.</value>
  </data>
  <data name="pleasecontactme" xml:space="preserve">
    <value>Please contact Strawberry Software on the official GitHub Repository by opening an Issue, by going on the official Strawberry Software Discord Server and pinging Strawberry, or by going to the MDRG Analyzer thread on the Incontinent Cell Discord Server and pinging Strawberry there.</value>
  </data>
  <data name="selectsavefile" xml:space="preserve">
    <value>Please select the save slot you wish to load.</value>
  </data>
  <data name="selectsaveslot_invalidsaveslot" xml:space="preserve">
    <value>An invalid save slot has been selected, please try again.</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="settings_availablelanguages" xml:space="preserve">
    <value>Available Languages</value>
  </data>
  <data name="settings_defaultlanguage" xml:space="preserve">
    <value>Default Language</value>
  </data>
  <data name="settings_defaultlanguage_prompt" xml:space="preserve">
    <value>Set your desired default language to use the program with. Invalid entries default to English (United States of America).</value>
  </data>
  <data name="settings_errorsavingsettings" xml:space="preserve">
    <value>Error while saving settings. Log file created.</value>
  </data>
  <data name="settings_instructions" xml:space="preserve">
    <value>Please enter the key for the setting you wish to change.</value>
  </data>
  <data name="settings_invalidlanguage" xml:space="preserve">
    <value>Invalid language chosen, defaulting to English (United States of America)</value>
  </data>
  <data name="settings_saved" xml:space="preserve">
    <value>Successfully saved settings! Returning to Main Menu.</value>
  </data>
  <data name="settings_youhaveselectedlanguage" xml:space="preserve">
    <value>You have selected</value>
  </data>
  <data name="slot" xml:space="preserve">
    <value>Slot</value>
  </data>
  <data name="version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="WeekDaysFriday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="WeekDaysMonday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="WeekDaysSaturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="WeekDaysSunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="WeekDaysThursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="WeekDaysTuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="WeekDaysUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="WeekDaysWednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome to MDRG Analyzer (Multi-Platform)! While this is a secondary app to the main MDRG Analyzer, which is Windows-only, I hope you can use this for a natively supported workaround!</value>
  </data>
</root>